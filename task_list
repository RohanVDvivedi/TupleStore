TASKS PICKED

 * add a function to check if the data pointer to is an EMPTY_USER_VALUE
   * if fixed sized then all 0s
   * if variable sized then all 0s, except when it has size in prefix which must be equal to min_size
 * can compare using data_type_info, compare using user_value and hash function using data
   * add a comment that these functions are not compatible with EMPTY_USER_VALUE
   * while hashing
     * if the user value is NULL, return 0
     * if there are multiple elements XOR their hashes
     * string and blob types are directly hashed
   * if both are primitive numeral type elements compare them directly
   * if they are tuples they are comparable only if they both have same dti pointers
   * else lastly their containee type_info must match
 * nested hash, compare functions with positional_accessor, taking in tuple_def and tuple as input using positional accessor
 * default can_compare, compare and hash functions for user_value
   * for primitve numeral type elements use the default comparator
   * tuples are comparable if they are same data_type_info
   * arrays, strings and blobs are regarded as same things and are comparable with each other if their containees are comparable
 * test and make the old testcases function and return the same output
 * add new test case to test all functions of complex nested types using tuple def

1 NEW TYPE TASKS

 *1*
 * add hash_tables for type_name based type casting, comparing and hashing
 * only tuples can be stored on the disk, and each tuple has a corresponding tuple_def, and each tuple_def contains a tuple_size_def

 *2* compact serializable form of tuple_def and tuple_size_def, to be stored in WAL or passed over network, and functions to serialize and deserialize it, use Cutlery streams after it has been implemented/moved to Cutlery.

2 OPTIMIZATION FOR COMPRESSION TASKS
 *3* make provisions to reset the unused bytes to 0s on the page while performing init_page and run_page_compaction. The reseting of bits should happen always on init_page and run_page_compaction. and should happen if a macro is defined.
